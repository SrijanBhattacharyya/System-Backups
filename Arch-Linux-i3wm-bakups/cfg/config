# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!


## setting some variables
# default mod key
set $mod Mod4

# default wallpaper
set $wppr /home/rohit/wallpapers/wp-0.png

# default brightness
set $brhtness   50
set $bchange    5

# default volume
set $vol        90
set $vchange    5

# default IO devices
set $speaker	0
set $mic	1


## default apps
# browser
set $browser	/usr/bin/google-chrome-stable --enable-features=WebUIDarkMode --force-dark-mode %U
# terminal
set $terminal	/usr/bin/alacritty
# file manager
set $fm 	/usr/bin/thunar


## tiling config
# gaps
gaps inner 10


## connect charger notification
exec --no-startup-id i3-battery-popup -n -D -L 20 -l 10


# Font for window titles. Will also be used by the bar unless a different font is used in the bar {} block below.
font pango:monospace 9

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Start XDG autostart .desktop files using dex. See also
# https://wiki.archlinux.org/index.php/XDG_Autostart
exec --no-startup-id dex --autostart --environment i3

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet


## audio control settings
# Use pactl to adjust volume in PulseAudio.
set $refresh_i3status killall -SIGUSR1 i3status

bindsym		XF86AudioRaiseVolume	exec    --no-startup-id	pactl   set-sink-volume $speaker	+$vchange%  &&  $refresh_i3status
bindsym		XF86AudioLowerVolume	exec    --no-startup-id	pactl   set-sink-volume $speaker	-$vchange%  &&  $refresh_i3status

bindsym		XF86AudioMute           exec    --no-startup-id	pactl   set-sink-mute   $speaker	toggle      &&  $refresh_i3status
bindsym		XF86AudioMicMute        exec    --no-startup-id	pactl   set-source-mute $mic		toggle      &&  $refresh_i3status


# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# move tiling windows via drag & drop by left-clicking into the title bar,
# or left-clicking anywhere into the window while holding the floating modifier.
#tiling_drag modifier titlebar

# kill focused window
bindsym 	$mod+x 		kill

# A more modern dmenu replacement is rofi: bindcode $mod+40 exec "rofi -modi drun,run -show drun"
# There also is i3-dmenu-desktop which only displays applications shipping a .desktop file. It is
# a wrapper around dmenu, so you need that installed. bindcode $mod+40 exec --no-startup-id
# i3-dmenu-desktop


## change focus
# with keyboard
bindsym 	$mod+Left 	focus left
bindsym 	$mod+Right 	focus right
bindsym 	$mod+Up 	focus up
bindsym 	$mod+Down 	focus down

# with mouse
focus_follows_mouse yes

# focus toggle
bindsym 	Alt+Tab 	focus toggle

## move focused window
bindsym 	$mod+Ctrl+Left 	move left
bindsym 	$mod+Ctrl+Right move right
bindsym 	$mod+Ctrl+Up 	move up
bindsym 	$mod+Ctrl+Down 	move down


## split desktop
# split in horizontal orientation
bindsym 	$mod+h 		split v

# split in vertical orientation
bindsym 	$mod+v 		split h

# change container layout (stacked, tabbed, toggle split)
#bindsym 	$mod+s 	layout stacking
#bindsym 	$mod+w 	layout tabbed
#bindsym 	$mod+e 	layout toggle split

# toggle tiling / floating
#bindsym $mod+Shift+space focus_toggle

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change focus between tiling / floating windows
bindsym $mod+space floating toggle

# change focus with Alt+Tab
#bindsym Alt+Tab focus change

# focus the parent container
#bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child


## enableing some services
# bluetooth
#exec_always bluetoothctl

# battery monitor
#exec_always python3 '/home/rohit/bat_monitor.py'


## adding some functionals
# lock screen
bindsym $mod+l exec i3lock --image $wppr -e

# setting the default volume
exec_always pamixer --set-volume $vol


## workspace behaviour
# wallpaper
exec_always feh --bg-fill $wppr

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1	"1: ÔÑ†"
set $ws2	"2: Ôâ®"
set $ws3	"3: ÔÑ° "
set $ws4	"4: Blender"
set $ws5	"5: ü™û"
set $ws6	"6: ‚ô´/üé• ‚úÇÔ∏è"
set $ws7	"7"
set $ws8	"8"
set $ws9	"9"
set $ws10	"10: üßÖ"

## switch to workspace
# by keyboard num keys
bindsym $mod+1			workspace number $ws1
bindsym $mod+2			workspace number $ws2
bindsym $mod+3			workspace number $ws3
bindsym $mod+4			workspace number $ws4
bindsym $mod+5			workspace number $ws5
bindsym $mod+6			workspace number $ws6
bindsym $mod+7			workspace number $ws7
bindsym $mod+8			workspace number $ws8
bindsym $mod+9			workspace number $ws9
bindsym $mod+0			workspace number $ws10

# switch workspace back and forth
bindsym $mod+Tab		workspace back_and_forth


## move focused container to workspace
bindsym $mod+Ctrl+1 move container to workspace number $ws1
bindsym $mod+Ctrl+2 move container to workspace number $ws2
bindsym $mod+Ctrl+3 move container to workspace number $ws3
bindsym $mod+Ctrl+4 move container to workspace number $ws4
bindsym $mod+Ctrl+5 move container to workspace number $ws5
bindsym $mod+Ctrl+6 move container to workspace number $ws6
bindsym $mod+Ctrl+7 move container to workspace number $ws7
bindsym $mod+Ctrl+8 move container to workspace number $ws8
bindsym $mod+Ctrl+9 move container to workspace number $ws9
bindsym $mod+Ctrl+0 move container to workspace number $ws10


## Brightness Settings
# setting up default display brightness at 50%
exec_always	xbacklight -set $brhtness

# increase brightness
bindsym		Mod2+XF86MonBrightnessUp	exec	xbacklight	-inc	$bchange

# decrese brightness
bindsym		Mod2+XF86MonBrightnessDown	exec	xbacklight	-dec	$bchange

# switch display off if the lid is down
#exec_always xbacklight -set 0


## assign programs to workspace
# for terminal
for_window [class="Alacritty"]			move to workspace $ws1

# for Chrome
for_window [class="Google-chrome"]		move to workspace $ws2

# for VSCode and associats
for_window [class="Code"]			move to workspace $ws3
for_window [class="Tk"]				move to workspace $ws3

# for Arduino-ide
for_window [class="processing-app-Base"]	move to workspace $ws3

# for Blender
for_window [class="Blender"]			move to workspace $ws4

# for scrcpy
for_window [class="scrcpy"]			move to workspace $ws5

# for raspi-imager
for_window [class="Imager"]			move to workspace $ws3

# for Audacity
for_window [class="Audacity"]			move to workspace $ws6

# for OpenShot
for_window [class="openshot"]			move to workspace $ws6

# for tor browser
for_window [class="Tor Browser"]		move to workspace $ws10


## enabling floating window and title bar for certain window
# example command
#for_window	[class="WM_CLASS"]              floating enable,	border size,		move_to_position
# screen dimention = 1920x1080

# for Tk windows
for_window	[class="Tk"]                    floating enable,	border normal,		move position center

# for vlc
for_window  	[class="vlc"]						border normal,		-g 420x180+1080+720

# for Screen Recorder
for_window	[class="SimpleScreenRecorder"], floating enable,	border normal

# for scrcpy
for_window	[class="scrcpy"]                floating enable,	border pixel 1,		move position center

# for raspi-imager
for_window	[class="Imager"]                floating enable,	border normal,		move position center

# for thunar
for_window	[class="Thunar"]                floating enable,	border pixel 1,		-g 773x474+374+131

# for Audacity
for_window	[class="Audacity"]					border normal

# for Kde Connect
for_window	[class="kdeconnect.app"]        floating enable,	border normal,		move position center

# for feh
for_window	[class="feh"]						border normal


## Hiding title bar
# for normal window
default_border		pixel	1

# for floating window
default_floating_border	pixel	1


## setting the title to be at the center
title_align center


## i3 funcs
# reload the configuration file
bindsym $mod+Shift+c reload


## i3
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart

# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"


## resize window
# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # same bindings for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"


## setting up colors
# col ver
set $bdr                #00ff00
set $ibdr               #ffffff
set $ubdr               #ff0000
set $bg                 #282828e6
set $ibg                #282828e6
set $ubg                #282828e6
set $txtcol             #ffffff
set $status_sep         #00897b
set $status_bg_top      #363636e6
set $status_bg_bottom   #363636e6

# class                 border  backgr. text    indicator
client.focused          $bdr    $bg     $txtcol $bg
client.unfocused        $ibdr   $ibg    $txtcol $ibg
client.focused_inactive $ibdr   $ibg    $txtcol $ibg
client.urgent           $ubdr   $ubg    $txtcol $ubg


## status bar
# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
# SHOWS ONLY SYSTEM INFO
bar {
	# Top Bar
	id bar-1
	position top
	status_command i3status -c ~/.config/i3status/i3status.conf
	font pango:monospace 10

	# hide tray
	tray_output none

	# color settings
	colors {
		background	$status_bg_top
		separator	$status_sep
	}

	# hide workspaces
	workspace_buttons no

	#align center
	#padding auto
}


# SHOWS ONLY WORKSPACES
bar {
	# Bottom Bar
	id bar-2
	position bottom
	status_command i3status -c ~/.config/i3status/i3workspaces.conf
	workspace_min_width 10

	# font
	#font pango:monospace 9
	font xft:Hack Nerd Font, FontAwesome 10

	# tray
	tray_padding 5

	# color settings
        colors {
                background      $status_bg_bottom
                separator       $status_sep

                # class                 border  backgr. text
                focused_workspace       $bdr    $bg     $txtcol
                inactive_workspace      $ibdr   $ibg    $txtcol
                urgent_workspace        $ubdr   $ubg    $txtcol
        }

        # gap setttings
        #padding        top[px] right[px]       bottom[px]      left[px]
        padding         0       5               0               5
}


## apps and shortcut key combinations
# example command
#bindsym	key-combination	exec	command

# start dmenu (a program launcher)
bindsym     $mod+d         exec    --no-startup-id dmenu_run

# start rofi (an app launcher)
bindsym		$mod+Shift+d    exec	/usr/bin/rofi -show drun

# start chrome
bindsym		$mod+b          exec	$browser

# start a terminal
bindsym		$mod+t          exec	$terminal

# start VSCode
bindsym		$mod+c          exec	/usr/bin/code

# start Blender
bindsym		$mod+Shift+b    exec	/usr/bin/blender

# start audacity
bindsym     $mod+a          exec    /usr/bin/audacity

# start scrcpy
bindsym		$mod+Shift+a    exec	/usr/bin/scrcpy

# start raspi-imager
bindsym		$mod+i          exec	/usr/bin/rpi-imager

# start thunar
bindsym		$mod+Shift+t    exec	$fm

# start screen recorder
#bindsym     $mod+Alt+r      exec    ~/ssr.sh

# player
# play-pause
bindsym		Mod2+XF86AudioPlay	exec	playerctl -p chromium play-pause

# play next
bindsym		Mod2+XF86AudioNext	exec	playerctl -p chromium next

# play previous
bindsym     Mod2+XF86AudioPrev	exec	playerctl -p chromium previous

# screenshot
bindsym     $mod+Print          exec flameshot gui

# screen recorder
#bindsym    $mod+Shift+Print    exec simplescreenrecorder


## execute at the start
# win compositor
exec_always	picom --config ~/.config/picom/picom.conf

# node-red server
#exec_always node-red

# screenshot
exec_always flameshot

# screen recorder
#exec_always simplescreenrecorder --start-hidden

# bluetooth
#exec_always bluetoothctl

# battery monitor
#exec_always python3 '/home/rohit/bat_monitor.py'

# network manager applet
exec_always nm-applet
